<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="compile" name="Mesquite">
	<target name="init">
		<property environment="env" />
		<property name="dist.dir" location="dist" />
		<property name="mesquite.version" value="1.07" />
		<property name="release.dir" location="${dist.dir}/Mesquite ${mesquite.version}" />
		<property name="mesquitefoldername" value="Mesquite_Folder"/>
		<property name="mesquitefolder.dir" location="${release.dir}/${mesquitefoldername}" />
		<property name="srcpath" value="Source" />
		<property name="src.dir" location="${srcpath}" />
		<property name="mesquitesrccontainingdir" location="${dist.dir}/Source" />
		<property name="mesquitesrc" location="${mesquitesrccontainingdir}/mesquiteSource" />
                <property name="rsrcs" value="Resources"/> 
		<property name="rsrcs.dir" location="${rsrcs}" />
		<property name="linuxbin.tgz" location="mesquite.tgz" />
		<property name="dmgbin" location="mesquite.dmg" />
		<property name="sitbin" location="mesquite.sit" />
		<property name="linuxsrc" location="mesquiteSource.tgz" />
		<property name="windowssrc" location="mesquiteSource.zip" />
		<property name="macsrc" location="mesquiteSource.sit" />

		<property name="workspacecontaining.dir" location="/home/dmandel/mesquiteworkspacedist"/>
		<property name="workspacedist.dir" location="${workspacecontaining.dir}/MesquiteWorkspace/" />
		<property name="workspaceproject.dir" location="${workspacedist.dir}/MesquiteProject/" />
		<property name="workspacesrc.dir" location="${workspaceproject.dir}/Source"/>
		<property name="workspacedistclasspath" location=".classpath.dist"/>

		<!-- assorted mac folders and files that need to be excluded for linux builds -->
		<property name="osxdirpath" value="**/Mesquite OSX.app/" />
		<property name="osxdirpath1.4" value="**/Mesquite OSX (Java 1.4).app/" />
		<property name="osxdirpath1.5" value="**/Mesquite OSX (Java 1.5).app/" />
		<property name="os9path" value="**/Mesquite OS9" />

		<!-- server destination locations -->
		<property file="serverinfo.properties" />
		<property name="hostprefix" value="${username}:${password}@${host}:" />
		<!-- The directory where the binary distributions are stored -->
		<property name="bininstalldir" value="${hostprefix}/home/dmandel/mesquitebin/" />
		<!-- The directory where the source distributions are stored -->
		<property name="srcinstalldir" value="${hostprefix}/home/dmandel/mesquitesrc/" />
		<!-- The path to Mesquite_Folder on the server -->
		<property name="mesquitefolderinstalldir" value="/home/dmandel/Mesquite_Folder/" />

		<property name="pal" value="pal.zip"/>
		<property name="jsci" value="JSci.zip"/>
		<property name="jama" value="Jama-1.0.1.zip"/>
		<property name="mrj" value="MRJToolkitStubs.zip"/>
		<property name="applejava" value="AppleJavaExtensions.jar"/>
		<path id="compile.classpath" >
			<pathelement location="${pal}" />
			<pathelement location="${jsci}" />
			<pathelement location="${jama}" />
			<pathelement location="${mrj}" />
			<pathelement location="${applejava}" />
		</path>
		<tstamp>
			<format property="year" pattern="yyyy" />
		</tstamp>
		<filterset id="mesquitetokens.filterset">
			<filter token="MESQUITE_RELEASE_VERSION" value="${mesquite.version}" />
			<!-- is this needed, or is the release date always the year? -->
			<filter token="MESQUITE_RELEASE_DATE" value="${DSTAMP}" />
			<filter token="MESQUITE_RELEASE_YEAR" value="${year}" />
		</filterset>
	</target>

	<target depends="init" name="clean">
		<description>Gets rid of all generated build files</description>
		<delete>
			<fileset dir="${src.dir}">
				<include name="**/*.class" />
			</fileset>
		</delete>
		<delete dir="${dist.dir}" />
		<delete dir="${workspacecontaining.dir}" />
		<delete file="${linuxbin.tgz}" />
		<delete file="${dmgbin}" />
		<delete file="${sitbin}" />
		<delete file="${linuxsrc}" />
		<delete file="${windowssrc}" />
		<delete file="${macsrc}" />
	</target>

	<target depends="init,clean" name="compile">
		<description>Compiles the mesquite source and sends the output to the dist directory</description>
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${mesquitefolder.dir}" />
		<javac debug="true" destdir="${mesquitefolder.dir}" srcdir="${srcpath}" target="1.3" source="1.3" nowarn="true" memorymaximumsize="500m" fork="true" memoryinitialsize="100m">
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<target depends="compile" name="packagedistlinuxmac">
		<description>Copies the appropriate files and creates distribution .tgz and .sit</description>
		<copy todir="${mesquitefolder.dir}">
			<fileset dir="${rsrcs.dir}">
				<exclude name="${osxdirpath}" />
				<exclude name="${osxdirpath1.4}" />
				<exclude name="${osxdirpath1.5}" />
				<exclude name="${os9path}" />
			</fileset>
			<fileset dir="${srcpath}">
				<include name="**/*" />
				<exclude name="**/*.java" />
				<exclude name="**/Notes/" />
			</fileset>
			<filterset refid="mesquitetokens.filterset" />
		</copy>
		<!-- package up the linux dist before we copy the mac stuff -->
		<tar basedir="${release.dir}" destfile="${linuxbin.tgz}" compression="gzip" />

		<copy todir="${mesquitefolder.dir}">
			<fileset dir="${rsrcs.dir}">
				<include name="${osxdirpath}" />
				<include name="${osxdirpath1.4}" />
				<include name="${osxdirpath1.5}" />
				<include name="${os9path}" />
			</fileset>
		</copy>

		<!-- create .dmg -->
		<exec executable="hdiutil" failonerror="false">
			<arg value="create" />
			<arg value="-srcfolder" />
			<arg value="${release.dir}" />
			<arg value="-fs" />
			<arg value="HFS+" />
			<arg value="${dmgbin}" />
		</exec>

		<!--
		<exec executable="stuff" failonerror="false" >
			<arg line="-q -n='${sitbin}' -f=sit5 '${mesquitefolder.dir}'"/>
		</exec>
		-->
	</target>

	<target depends="init" name="packagesrc">
		<description>packages up the source distributions</description>
		<!--
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${mesquitesrc}" />
		<copy todir="${mesquitesrc}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<filterset refid="mesquitetokens.filterset" />
		</copy>
		<exec executable="stuff" failonerror="false">
			<arg line="-q -n='${macsrc}' -f=sit5 '${mesquitesrc}'"/>
		</exec>
		<zip destfile="${windowssrc}">
			<fileset dir="${mesquitesrccontainingdir}" />
		</zip>
		<tar destfile="${linuxsrc}" compression="gzip" basedir="${mesquitesrccontainingdir}" />
		-->
		<mkdir dir="${workspacecontaining.dir}"/>
		<mkdir dir="${workspacedist.dir}"/>
		<mkdir dir="${workspaceproject.dir}"/>
		<mkdir dir="${workspacesrc.dir}"/>
		<copy todir="${workspaceproject.dir}">
			<fileset dir=".">
				<include name="${jama}"/>
				<include name="${jsci}"/>
				<include name="${applejava}"/>
				<include name="${mrj}"/>
                                <include name="${pal}"/>
				<include name=".project"/>
				<include name=".settings/"/>
				<include name="${mesquitefoldername}"/>
				<include name="${rsrcs}"/>
			</fileset>
		</copy>
		<copy todir="${workspaceproject.dir}/${rsrcs}">
			<fileset dir="${rsrcs}">
				<include name="**/*"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy todir="${workspacesrc.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
				<include name="**/*.gif"/>
			</fileset>
			<filterset refid="mesquitetokens.filterset" />
		</copy>
		<copy file="${workspacedistclasspath}" tofile="${workspaceproject.dir}/.classpath"/>
		<zip destfile="${windowssrc}">
			<fileset dir="${workspacedist.dir}" />
		</zip>
		<tar destfile="${linuxsrc}" compression="gzip" basedir="${workspacedist.dir}" />
	</target>

	<target depends="packagedistlinuxmac,packagesrc" name="deployfiles">
		<description>Sends all of the generated files up to the server</description>
		<scp file="${linuxbin.tgz}" todir="${bininstalldir}" />
		<scp file="${sitbin}" todir="${bininstalldir}" />
		<scp file="${dmgbin}" todir="${bininstalldir}" />
		<scp file="${macsrc}" todir="${srcinstalldir}" />
		<scp file="${windowssrc}" todir="${srcinstalldir}" />
		<scp file="${linuxsrc}" todir="${srcinstalldir}" />
		<taskdef name="ssh" classname="com.sshtools.ant.Ssh" classpath="maverick-ant.jar" />
		<ssh host="${host}" username="${username}" password="${password}">
			<exec cmd="rm -rf ${mesquitefolderinstalldir}" />
			<exec cmd="mkdir ${mesquitefolderinstalldir}" />
			<sftp action="put" remotedir="${mesquitefolderinstalldir}">
				<fileset dir="${mesquitefolder.dir}" />
			</sftp>
		</ssh>
	</target>
</project>