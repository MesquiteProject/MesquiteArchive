#NEXUS
[written Sun Mar 07 17:17:52 PST 2004 by Mesquite  version 1.01+ (build e89)]

BEGIN TAXA;
	TITLE species;
	DIMENSIONS NTAX=16;
	TAXLABELS
		taxon_0 taxon_1 taxon_2 taxon_3 taxon_4 taxon_5 taxon_6 taxon_7 taxon_8 taxon_9 taxon_10 taxon_11 taxon_12 taxon_13 taxon_14 taxon_15 
	;

END;


BEGIN CHARACTERS;
	TITLE  measurements;
	DIMENSIONS NCHAR=5;
	FORMAT DATATYPE = CONTINUOUS;
CHARSTATELABELS 
		1 length,
		2 width,
		3 speed,
		4 temperature,
		5 personality ; 
	MATRIX
	taxon_0    9.367 5.022 2.763 38.57 1.723
	taxon_1    8.793 3.244 4.664 38.81 0.296
	taxon_2    8.576 6.245 2.528 38.5 -0.0239
	taxon_3    11.54 8.718 5.862 40.54 -2.039
	taxon_4    9.977 6.082 5.984 38.32 0.7256
	taxon_5    9.381 5.468 4.398 38.48 1.213
	taxon_6    8.162 5.782 4.894 39.69 0.8212
	taxon_7    8.676 4.86 4.186 39.61 0.5508
	taxon_8    9.356 6.75 4.649 38.01 0.795
	taxon_9    8.107 5.989 2.975 40.13 -1.686
	taxon_10   9.692 7.227 5.747 39.52 -0.8719
	taxon_11   8.902 6.05 4.337 37.5 -0.9571
	taxon_12   9.055 6.575 4.896 40.48 -0.293
	taxon_13   10.11 4.199 3.327 38.94 -0.1349
	taxon_14   10.2 3.975 4.623 37.1 -0.4575
	taxon_15   7.604 5.438 2.809 37.69 -2.129

;

END;

BEGIN TREES;
	Title stored_trees;
	LINK Taxa = species;
	TRANSLATE
		1 taxon_0,
		2 taxon_1,
		3 taxon_2,
		4 taxon_3,
		5 taxon_4,
		6 taxon_5,
		7 taxon_6,
		8 taxon_7,
		9 taxon_8,
		10 taxon_9,
		11 taxon_10,
		12 taxon_11,
		13 taxon_12,
		14 taxon_13,
		15 taxon_14,
		16 taxon_15;
	TREE one_tree = ((((1,4),13),5),(11,(((3,10),9),(((6,14),15),((((7,12),16),8),2)))));

END;


BEGIN NOTES;
	TEXT  FILE TEXT = 'Reconstruction of phylogenetic trees has been dominated (in practice) by categorical data.  Mesquite allows other criteria for tree search, including parsimony searches using continuous valued data.^n^nMesquite has a general concept of "a number for a tree".  Examples could be the treelength, the number of steps in a character, the likelihood of the tree, its symmetry, and so on.  Each of these is a number that applies to the tree.  For any given number for a tree, one might seek that tree which maximizes or minimizes it (e.g., minimizing treelength in a standard parsimony search).  The Tree Search modules allow one to search for a tree optimizing any such number for a tree available.  Here, we''d like to search for a species tree minimizing treelength for continuous-valued data.  ^n^nTo do that, go to the Taxa&Trees menu and select "Heuristic" under "Tree Search" under the "Make trees block from" submenu.  Indicate you want to use the criterion "Treelength".  The tree search modules currently do a simple addition sequence followed by branch rearrangements, and are much much much much slower than PAUP* (for instance).  But, after humming for a while, they should indicate that the trees are ready, and ask if you want to see the tree in a tree window.  Say "yes".  You''ll see the tree found by the search.  You can also return to the ';



END;

BEGIN ASSUMPTIONS;
	TYPESET * UNTITLED   =  Squared:  1 -  5;
TYPESET Current_Parsimony_Models   =  Squared:  1 -  5;

END;

BEGIN MESQUITECHARMODELS;
	ProbModelSet * UNTITLED   =  Brownian_default:  1 -  5;
END;

Begin MESQUITE;
		MESQUITESCRIPTVERSION 2;
		TITLE AUTO;
		tell ProjectCoordinator;
		getEmployee  #mesquite.minimal.ManageTaxa.ManageTaxa;
		tell It;
			setID 0 9019647525474091584;
		endTell;
		getEmployee  #mesquite.charMatrices.ManageCharacters.ManageCharacters;
		tell It;
			setID 0 8548924366163732821;
			checksum 0 3542125815;
		endTell;
		getEmployee  #mesquite.charMatrices.BasicDataWindowCoord.BasicDataWindowCoord;
		tell It;
			showDataWindow #8548924366163732821 #mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindowMaker;
			tell It;
				getWindow;
				tell It;
					setSize 524 441;
					setLocation 7 11;
					setFont SanSerif;
					setFontSize 10;
					offInfoBar;
					setExplanationSize 20;
					setAnnotationSize 20;
					getToolPalette;
					tell It;
					endTell;
					setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.arrow;
					toggleShowNames on;
					toggleTight off;
					toggleShowChanges on;
					toggleShowStates on;
					toggleAutoWithCharNames on;
					setColumnWidth 66;
				endTell;
				showWindow;
				getEmployee #mesquite.ornamental.CellPictures.CellPictures;
				tell It;
					toggleSeparate off;
					toggleAA off;
				endTell;
			endTell;
		endTell;
		getEmployee  #mesquite.trees.BasicTreeWindowCoord.BasicTreeWindowCoord;
		tell It;
			makeTreeWindow #9019647525474091584  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				setTreeSource  #mesquite.trees.StoredTrees.StoredTrees;
				tell It;
					setTreeBlock 1;
					toggleUseWeights off;
				endTell;
				setAssignedID 6039.975479485824.5658383844903825957;
				getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.trees.SquareTree.SquareTree;
					tell It;
						setEdgeWidth 6;
						orientRight;
						getEmployee #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
						tell It;
							stretchToggle on;
							branchLengthsToggle off;
							toggleScale on;
							toggleCenter on;
							toggleEven on;
							namesAngle ?;
						endTell;
					endTell;
					setBackground Green;
					setBranchColor Blue;
					showNodeNumbers off;
					labelBranchLengths off;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setFont Serif;
						setFontSize 18;
						setColor Black;
						toggleColorPartition on;
						toggleShadePartition on;
						toggleNodeLabels on;
						toggleShowNames on;
					endTell;
				endTell;
				getTreeWindow;
				tell It;
					setSize 527 372;
					setLocation 389 16;
					setFont SanSerif;
					setFontSize 10;
					onInfoBar;
					setExplanationSize 20;
					setAnnotationSize 20;
					getToolPalette;
					tell It;
					endTell;
					setTreeNumber 1;
					toggleSizeToFit on;
					toggleTextOnTree off;
					newAssistant  #mesquite.trees.TreeLegendMaker.TreeLegendMaker;
				tell It;
					setOffsetsX 6;
					setOffsetsY 294;
					getLegendsVector;
					tell It;
					distributeCommands;
						setBounds 6 294 137 37;
						setOffsetX 6;
						setOffsetY 294;
					endDistributeCommands;
					endTell;
					newLegendItem  #mesquite.parsimony.Treelength.Treelength;
					tell It;
						getEmployee #mesquite.parsimony.TreelengthForMatrix.TreelengthForMatrix;
						tell It;
							getEmployee #mesquite.parsimony.ParsCharSteps.ParsCharSteps;
							tell It;
								setModelSource  #mesquite.parsimony.CurrentParsModels.CurrentParsModels;
								getEmployee #mesquite.parsimony.ParsimonySquared.ParsimonySquared;
								tell It;
									toggleWeight on;
								endTell;
							endTell;
						endTell;
						getEmployee #mesquite.charMatrices.CharMatrixCoordIndep.CharMatrixCoordIndep;
						tell It;
							setCharacterSource #mesquite.charMatrices.StoredMatrices.StoredMatrices;
							tell It;
								setDataSet #8548924366163732821;
							endTell;
						endTell;
					endTell;
				endTell;
				endTell;
				showWindow;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
			endTell;
		endTell;
		newAssistant  #mesquite.basic.ExamplesNavigator.ExamplesNavigator;
		tell It;
			setNextFileName '06-sim.nex';
			setPrevFileName '04-branchLengths.nex';
			getWindow;
			tell It;
					setSize 461 461;
					setLocation 22 166;
					setFont SanSerif;
					setFontSize 10;
					offInfoBar;
					setExplanationSize 0;
					setAnnotationSize 0;
					setActive;
				setExplanation 'Reconstruction of phylogenetic trees has been dominated (in practice) by categorical data.  Mesquite allows other criteria for tree search, including parsimony searches using continuous valued data.^n^nMesquite has a general concept of "a number for a tree".  Examples could be the treelength, the number of steps in a character, the likelihood of the tree, its symmetry, and so on.  Each of these is a number that applies to the tree.  For any given number for a tree, one might seek that tree which maximizes or minimizes it (e.g., minimizing treelength in a standard parsimony search).  The Tree Search modules allow one to search for a tree optimizing any such number for a tree available.  Here, we''d like to search for a species tree minimizing treelength for continuous-valued data.  Notice that the tree in the green window has a treelength of 57.104^n^nTo do that, go to the Taxa&Trees menu and select "Heuristic" under "Tree Search" under the "Make New Trees Block from" submenu.  Indicate you want to use the criterion "Treelength".  The tree search modules currently do a simple addition sequence followed by branch rearrangements, and are much much much much slower than PAUP* (for instance).  But, after humming for a while, they should indicate that the trees are ready, and ask if you want to see the tree in a tree window.  Say "yes".  You''ll see the tree found by the search. ^n^nTree searches don''t currently adjust branch lengths.^n^nYou can also return to the green tree window and you''ll see a Tree Block submenu in the Tree menu.  Choose the new tree block created by the search, and you''ll see it.';
				setTitle Tree_search;
				toggleFileNames off;
				setPrevButtonName Previous;
				setNextButtonName Next;
			endTell;
			showWindow;
		endTell;
		endTell;
end;

