#NEXUS
[written Sun Sep 21 19:26:10 PDT 2003 by Mesquite  version 1.0 (build e57)]

BEGIN TAXA;
	TITLE Triangles;
	DIMENSIONS NTAX=4;
	TAXLABELS
		one_fish two_fish red_fish blue_fish 
	;

END;


BEGIN CHARACTERS;
	TITLE  landmarks;
	DIMENSIONS NCHAR=9;
	FORMAT DATATYPE = CONTINUOUS ITEMS = (x y ) ;
CHARSTATELABELS 
		1 landmark_1,
		2 landmark_2,
		3 landmark_3,
		4 landmark_4,
		5 landmark_5,
		6 landmark_6,
		7 landmark_7,
		8 landmark_8 ; 
	MATRIX
	one_fish    (0.0 1.0) (2.0 3.0) (5.0 3.0) (6.5 2.0) (9.5 2.5) (9.5 0.0) (6.5 0.5) (4.0 0.0) (2.0 0.0)
	two_fish    (0.0 1.5) (2.5 2.8) (4.7 3.0) (6.5 2.0) (9.5 2.5) (8.5 0.0) (6.5 0.5) (4.0 0.0) (2.0 0.0)
	red_fish    (0.0 1.2) (2.0 3.0) (4.7 3.0) (7.5 2.0) (12.5 2.5) (9.5 0.0) (7.5 0.9) (4.0 0.0) (2.0 0.0)
	blue_fish   (0.0 1.0) (2.0 3.0) (5.0 3.0) (7.5 2.0) (9.0 2.5) (8.5 0.5) (7.5 0.8) (4.0 0.0) (2.0 0.0)

;

END;

BEGIN NOTES;
	TEXT  FILE TEXT = 'This file shows the use of landmark data to reconstruct the form of ancestors.  The data matrix shows x,y positions of each of 9 landmarks.  Squared change parsimony is used to reconstruct the landmarks of ancestors.  Because the reconstruction is sensitive to branch lengths, it will change if branch lengths change.  This can be done by changing the branch lengths in the tree window at upper left using the ruler tool.^n^nThe following example files show how to build an analysis like this.';

	PICTURE TAXA = Triangles TAXON = 1 PICTURE = 'fish/one.gif';
	PICTURE TAXA = Triangles TAXON = 2 PICTURE = 'fish/two.gif';
	PICTURE TAXA = Triangles TAXON = 3 PICTURE = 'fish/red.gif';
	PICTURE TAXA = Triangles TAXON = 4 PICTURE = 'fish/blue.gif';



END;

BEGIN ASSUMPTIONS;
	TYPESET * UNTITLED   =  Squared:  1 -  9;

END;

BEGIN MESQUITECHARMODELS;
	ProbModelSet * UNTITLED   =  Brownian_default:  1 -  9;
END;

Begin MESQUITE;
		MESQUITESCRIPTVERSION 2;
		TITLE AUTO;
		tell ProjectCoordinator;
		getEmployee  #mesquite.minimal.ManageTaxa.ManageTaxa;
		tell It;
			setID 0 4684932117850311189;
		endTell;
		getEmployee  #mesquite.charMatrices.ManageCharacters.ManageCharacters;
		tell It;
			setID 0 2364200711958207605;
			checksum 0 834511649;
		endTell;
		getEmployee  #mesquite.charMatrices.BasicDataWindowCoord.BasicDataWindowCoord;
		tell It;
			showDataWindow #2364200711958207605 #mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindowMaker;
			tell It;
				getWindow;
				tell It;
					setSize 372 160;
					setLocation 5 500;
					setFont SanSerif;
					setFontSize 10;
					offInfoBar;
					setExplanationSize 20;
					setAnnotationSize 20;
					getToolPalette;
					tell It;
					endTell;
					setTool mesquite.charMatrices.BasicDataWindowMaker.BasicDataWindow.arrow;
					toggleShowNames on;
					toggleTight off;
					toggleShowChanges on;
					toggleShowStates on;
					setColumnWidth 88;
				endTell;
				showWindow;
			endTell;
		endTell;
		getEmployee  #mesquite.trees.BasicTreeWindowCoord.BasicTreeWindowCoord;
		tell It;
			makeTreeWindow #4684932117850311189  #mesquite.trees.BasicTreeWindowMaker.BasicTreeWindowMaker;
			tell It;
				setTreeSource  #mesquite.trees.DefaultTrees.DefaultTrees;
				setAssignedID 3446.961442092478.5319374357487583883;
				getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
				tell It;
					suppress;
					setTreeDrawer  #mesquite.trees.DiagonalDrawTree.DiagonalDrawTree;
					tell It;
						setEdgeWidth 12;
						orientRight;
						getEmployee #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
						tell It;
							stretchToggle off;
							branchLengthsToggle on;
							toggleScale on;
							toggleCenter off;
							toggleEven off;
							namesAngle ?;
						endTell;
					endTell;
					setBackground White;
					setBranchColor Black;
					desuppress;
					getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
					tell It;
						setFont SanSerif;
						setFontSize 10;
						setColor Black;
						toggleColorPartition on;
						toggleNodeLabels on;
						toggleShowNames on;
					endTell;
				endTell;
				getTreeWindow;
				tell It;
					setSize 352 387;
					setLocation 1 26;
					setFont SanSerif;
					setFontSize 10;
					onInfoBar;
					setExplanationSize 20;
					setAnnotationSize 20;
					getToolPalette;
					tell It;
					endTell;
					setTreeNumber 1;
					setTree '((1:1.0,2:1.0):1.0,(3:0.43,4:1.0):1.0):1.0;';
					toggleSizeToFit on;
					toggleTextOnTree off;
					newWindowAssistant  #mesquite.trees.DependentTreeWindow.DependentTreeWindow;
				tell It;
					getTreeDrawCoordinator #mesquite.trees.BasicTreeDrawCoordinator.BasicTreeDrawCoordinator;
					tell It;
						suppress;
						setTreeDrawer  #mesquite.trees.DiagonalDrawTree.DiagonalDrawTree;
						tell It;
							setEdgeWidth 12;
							orientUp;
							getEmployee #mesquite.trees.NodeLocsStandard.NodeLocsStandard;
							tell It;
								stretchToggle off;
								branchLengthsToggle off;
								toggleScale on;
								toggleCenter off;
								toggleEven off;
								namesAngle ?;
							endTell;
						endTell;
						setBackground White;
						setBranchColor Black;
						desuppress;
						getEmployee #mesquite.trees.BasicDrawTaxonNames.BasicDrawTaxonNames;
						tell It;
							setFont SanSerif;
							setFontSize 10;
							setColor Black;
							toggleColorPartition on;
							toggleNodeLabels on;
							toggleShowNames on;
						endTell;
					endTell;
					getWindow;
					tell It;
						setSize 670 434;
						setLocation 356 10;
						setFont SanSerif;
						setFontSize 10;
						onInfoBar;
						setExplanationSize 30;
						setAnnotationSize 0;
						getToolPalette;
						tell It;
						endTell;
						newAssistant #mesquite.rhetenor.LandmarkDrawings.LandmarkDrawings;
					tell It;
						sizeDrawing 140 70;
						setInitialOffsetX -605;
						setInitialOffsetY -147;
						setItems 0 1;
						toggleLastToFirst on;
						getCharacterSource  #mesquite.charMatrices.CharMatrixCoordIndep.CharMatrixCoordIndep;
						tell It;
							setCharacterSource #mesquite.charMatrices.StoredMatrices.StoredMatrices;
							tell It;
								setDataSet #2364200711958207605;
							endTell;
						endTell;
						getReconstructor  #mesquite.ancstates.AncestralStatesAll.AncestralStatesAll;
						tell It;
							setMethod  #mesquite.parsimony.ParsAncestralStates.ParsAncestralStates;
							tell It;
								setModelSource  #mesquite.parsimony.CurrentParsModels.CurrentParsModels;
								getEmployee #mesquite.parsimony.ParsimonySquared.ParsimonySquared;
								tell It;
									toggleWeight on;
								endTell;
							endTell;
						endTell;
					endTell;
					endTell;
					showWindow;
				endTell;
				endTell;
				showWindow;
				getEmployee #mesquite.ornamental.BranchNotes.BranchNotes;
				tell It;
					setAlwaysOn off;
				endTell;
				getEmployee #mesquite.ornamental.Projector.Projector;
				tell It;
					getExtra 0;
					tell It;
						showTaxonPicture 0;
						showTaxonPicture 1;
						showTaxonPicture 2;
						showTaxonPicture 3;
					endTell;
				endTell;
				getEmployee #mesquite.trees.ColorBranches.ColorBranches;
				tell It;
					setColor Red;
					removeColor off;
				endTell;
			endTell;
		endTell;
		newAssistant  #mesquite.basic.ExamplesNavigator.ExamplesNavigator;
		tell It;
			setNextFileName '18-landmarks.nex';
			setPrevFileName '16-epcaLiveSim.nex';
			getWindow;
			tell It;
					setSize 605 160;
					setLocation 395 516;
					setFont SanSerif;
					setFontSize 10;
					offInfoBar;
					setExplanationSize 0;
					setAnnotationSize 0;
					setActive;
				setExplanation 'This file shows the use of landmark data to reconstruct the form of ancestors.  The data matrix shows x,y positions of each of 9 landmarks.  Squared change parsimony is used to reconstruct the landmarks of ancestors.  Because the reconstruction is sensitive to branch lengths, it will change if branch lengths change.  This can be done by changing the branch lengths in the tree window at upper left using the ruler tool.^n^nThe following example files show how to build an analysis like this.';
				setTitle Ancestral_forms;
				toggleFileNames off;
				setPrevButtonName Previous;
				setNextButtonName Next;
			endTell;
			showWindow;
		endTell;
		endTell;
end;

