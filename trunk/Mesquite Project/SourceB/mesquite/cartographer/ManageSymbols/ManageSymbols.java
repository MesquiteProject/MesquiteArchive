/* Mesquite.cartographer source code.  Copyright 2005 D. Maddison, W. Maddison. Version 1.0, April 2005.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.cartographer.ManageSymbols;import java.awt.*;import mesquite.lib.*;import mesquite.lib.duties.*;import mesquite.cartographer.lib.*;/* ======================================================================== */public class ManageSymbols extends FileInit   {	SymbolsVector symbols;	/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName) {		return true;  	 }   	 public Class getDutyClass() {   	 	return ManageSymbols.class;   	 } 	public String getDutyName() { 		return "Manager of symbols";   	 }   	public boolean isSubstantive(){   		return false;     	} 	public void projectEstablished() {		symbols = new SymbolsVector();		symbols.addElement(new CircleSymbol(),true);		symbols.addElement(new SquareSymbol(),true);		symbols.addElement(new DiamondSymbol(),true);		symbols.addElement(new TriangleSymbol(),true);		symbols.addElement(new StarSymbol(),true);		getProject().addFileElement(symbols);		super.projectEstablished(); 	}	/*.................................................................................................................*/    	 public String getName() {		return "Manage Symbols";   	 } }