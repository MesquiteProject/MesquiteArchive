/* Mesquite source code.  Copyright 1997-2005 W. Maddison and D. Maddison. Version 1.06, September 2005.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.align.AlignMatchRNAStem; import mesquite.align.lib.*;import mesquite.lib.*;import mesquite.lib.characters.*;import mesquite.lib.duties.*;import mesquite.categ.lib.*;/* ======================================================================== */public class AlignMatchRNAStem extends AlignMatch {   	/*.................................................................................................................*/	 public long[] 	getTransformedCandidateArray(long[] candidateArray) {		 long[] array = LongArray.reverse(candidateArray);		 for (int i=0; i<array.length; i++)			array[i] = DNAData.complement(array[i]);		 return array;	 }   	/*.................................................................................................................*/    	 public String getName() {		return "Align Match RNA Stem";   	 }	/*.................................................................................................................*/  	 public String getExplanation() {		return "Returns the fraction by which sequences are matches of reverse complements by RNA stem-matching rules.";   	 }	 	/*.................................................................................................................*/  	/** Override if one wishes to modify the alignment costs away from the default. */  	 	public int[][] modifyAlignmentCosts(int[][] defaultSubs) {  	 		int[][] subs = defaultSubs;  	 		subs[2][3] = 0; 	 		subs[3][2] = 0; 	 		return subs; 	}	/*.................................................................................................................*/    	 public boolean isPrerelease() {		return true;   	 }}