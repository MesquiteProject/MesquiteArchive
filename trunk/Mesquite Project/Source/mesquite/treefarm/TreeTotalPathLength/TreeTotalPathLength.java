/* Mesquite source code.  Copyright 1997-2006 W. Maddison. Version 1.11, June 2006.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.treefarm.TreeTotalPathLength;/*~~  */import java.util.*;import java.awt.*;import mesquite.lib.*;import mesquite.lib.duties.*;/* ======================================================================== */public class TreeTotalPathLength extends NumberForTree {	/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName) { 		return true;  	 }  	   	 public double totalPath(Tree tree, int node) {  	 	if (tree.nodeIsTerminal(node)) {   	 		if (tree.branchLengthUnassigned(node))  	 			return 0;  	 		else  	 			return tree.getBranchLength(node);  	 	}  	 	else {	  	 	double sum = 0;		  	 	for (int daughter = tree.firstDaughterOfNode(node); tree.nodeExists(daughter); daughter = tree.nextSisterOfNode(daughter)) {	  			sum += totalPath(tree, daughter);	  		}  	 		return sum;  		}  	 }   	/** Called to provoke any necessary initialization.  This helps prevent the module's intialization queries to the user from   	happening at inopportune times (e.g., while a long chart calculation is in mid-progress)*/   	public void initialize(Tree tree, CommandRecord commandRec){   	}	/*.................................................................................................................*/	public void calculateNumber(Tree tree, MesquiteNumber result, MesquiteString resultString, CommandRecord commandRec) {    	 	if (result==null)    	 		return;		if (tree.hasBranchLengths())			result.setValue(totalPath(tree, tree.getRoot()));		else			result.setValue(0);		if (resultString!=null)			resultString.setValue("Sum of Branch Lengths: "+ result.toString());	}	/*.................................................................................................................*/   	public boolean isPrerelease(){   		return false;   	}	/*.................................................................................................................*/   	 public boolean showCitation(){   	 	return true;   	 }	/*.................................................................................................................*/    	 public String getName() {		return "Sum of Branch Lengths";   	 }	/*.................................................................................................................*/  	 public String getExplanation() {		return "Calculates the sum of branch lengths of the tree, treating unassigned lengths as 0.  The length of the root is not counted.";   	 }}