/* Mesquite module ~~ Copyright 1997-2001 W. & D. Maddison*/package mesquite.diverse.StoreCharacterHistory;/*~~  */import java.applet.*;import java.util.*;import java.awt.*;import mesquite.lib.*;import mesquite.lib.characters.*;import mesquite.lib.duties.*;/** ======================================================================== */public class StoreCharacterHistory extends TraceCharacterInit {	Vector histories;		/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName) {		addMenuItem( "Store history...", makeCommand("storeHistory",  (Commandable)this));		return true; 	}   	 public void setCharacterHistoryContainers(Vector historyContainers){   	 	histories = historyContainers;   	 } 		MesquiteInteger pos = new MesquiteInteger();	/*.................................................................................................................*/    	 public Object doCommand(String commandName, String arguments, CommandRecord commandRec, CommandChecker checker) {   	 	if (checker.compare(this.getClass(), "Stores the current character history", null, commandName, "storeHistory")) {    	 		//todo: if more than one traced, query user which one to store본본본본본본본본본본    	 		if (histories == null || histories.size()<1 || !(histories.elementAt(0) instanceof CharHistoryContainer))    	 			return null;	  	 	CharHistoryContainer tco = (CharHistoryContainer)histories.elementAt(0);	  	 	if (tco!=null && tco.getCharacterHistory()!=null && tco.getTree()!=null) {	    	 		CharacterHistory history = tco.getCharacterHistory();	    	 		CharacterHistory cloned = history.clone(null);	    	 		Tree tree = tco.getTree().cloneTree();	    	 		String s = MesquiteString.queryString(containerOfModule(), "Store History" , "Name of History: ", history.getName() );	    	 		if (s==null)	    	 			return null;	    	 		cloned.setName(s);	    	 		StoredCharacterHistory sHistory = new StoredCharacterHistory(cloned, tree);	    	 		if (sHistory!=null) {	    	 			sHistory.setName(s);					sHistory.setFile( getProject().getHomeFile(), false);  //TODO: should allow user to choose if more than one file		    	 		getProject().addFileElement(sHistory);	    	 		} //TODO: should set current tree to show this one if stored trees used	  	 	}    	 	}    	 	else    	 		return super.doCommand(commandName, arguments, commandRec, checker);		return null;   	 }   	 	/*.................................................................................................................*/    	 public String getName() {		return "Store Character History";   	 }	/*.................................................................................................................*/  	 public String getVersion() {		return null;   	 }   	 	/*.................................................................................................................*/  	 public String getExplanation() {		return "Stores a traced history of character evolution.";   	 }}