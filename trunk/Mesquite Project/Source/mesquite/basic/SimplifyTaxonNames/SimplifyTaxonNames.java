/* Mesquite source code.  Copyright 1997-2005 W. Maddison and D. Maddison. Version 1.06, August 2005.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.basic.SimplifyTaxonNames;import java.util.*;import java.awt.*;import java.text.Collator;import mesquite.lib.*;import mesquite.lib.duties.*;import mesquite.lib.table.*;/* ======================================================================== *new in 1.07* */public class SimplifyTaxonNames extends TaxonNameAlterer {		/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName){		return true;	}	/*.................................................................................................................*/   	public boolean getOptions(CommandRecord commandRec){   Debugg.println("getOptions ");    			return true;   	}	/*.................................................................................................................*/   	/** Called to alter the taxon name in a single cell.  If you use the alterContentOfCells method of this class,    	then you must supply a real method for this, not just this stub. */   	public boolean alterName(Taxa taxa, int it, CommandRecord commandRec){  		String name = taxa.getTaxonName(it);		if (name!=null){			String s=StringUtil.deletePunctuationAndSpaces(name);	  Debugg.println("s " + s);		taxa.setTaxonName(it, s, false);			return true;		}		return false;   	}	/*.................................................................................................................*/    	 public Object doCommand(String commandName, String arguments, CommandRecord commandRec, CommandChecker checker) {    	 	if (checker.compare(this.getClass(), "Simplifies taxon names", null, commandName, "simplifyNames")) {	   	 		if (taxa !=null){	   	 			alterTaxonNames(taxa,table, commandRec);	   	 		}    	 	}    	 	else    	 		return super.doCommand(commandName, arguments, commandRec, checker);		return null;   	 }	/*.................................................................................................................*/    	 public String getNameForMenuItem() {		return "Simplify Names...";   	 }	/*.................................................................................................................*/    	 public String getName() {		return "Simplify taxon names";   	 }   	 	/*.................................................................................................................*/  	 public String getExplanation() {		return "Deletes punctuation and spaces from taxon names.";   	 } 	/*.................................................................................................................*/  	/** returns the version number at which this module was first released.  If 0, then no version number is claimed.  If a POSITIVE double,  	 * then the number refers to the Mesquite version.  This should be used only by modules part of the core release of Mesquite.  	 * If a NEGATIVE double,  thne the number refers to the local version of the package, e.g. a third party package*/     	public double getVersionOfFirstRelease(){     		return 1.07;       	}     	/*.................................................................................................................*/     	public boolean isPrerelease(){     		return true;     	}}	