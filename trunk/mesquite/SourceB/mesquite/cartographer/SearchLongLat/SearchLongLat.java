/* Mesquite.cartographer source code.  Copyright 2005 D. Maddison, W. Maddison. Version 1.0, April 2005.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.cartographer.SearchLongLat; import java.util.*;import java.awt.*;import mesquite.lib.*;import mesquite.lib.characters.*;import mesquite.lib.duties.*;import mesquite.lib.table.*;import mesquite.cartographer.lib.*;import mesquite.cont.lib.*;/* ======================================================================== */public class SearchLongLat extends GeogDataSearcher { 	protected MesquiteTable table;	protected GeographicData gData;	protected URLLongLatServer URLTask;	/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName){		if (arguments ==null) 			URLTask = (URLLongLatServer)hireEmployee(commandRec, URLLongLatServer.class, "Latitude Longitude URL Provider");	 	else {	 		URLTask = (URLLongLatServer)hireNamedEmployee(commandRec, URLLongLatServer.class, arguments); 			if (URLTask == null) 				URLTask = (URLLongLatServer)hireEmployee(commandRec, URLLongLatServer.class, "Latitude Longitude URL Provider"); 		} 		if (URLTask == null) { 			return sorry(commandRec, getName() + " couldn't start because URL provided was obtained."); 		}		return true;	}	/*.................................................................................................................*/	/** returns whether this module is requesting to appear as a primary choice */   	public boolean requestPrimaryChoice(){   		return true;     	}	/*.................................................................................................................*/   	 public boolean isPrerelease(){   	 	return false;   	 }   	/** Called to search on the data in selected cells.  Returns true if data searched*/   	public boolean searchData(CharacterData data, MesquiteTable table, CommandRecord commandRec){		gData = (GeographicData)data;		if (!(gData instanceof GeographicData)){			discreetAlert(commandRec, "Only geographic data can be searched using this module.");			return false;		}		return searchSelectedTaxa(gData,table, commandRec);	}	/*.................................................................................................................*/   	public void searchOneTaxon(CharacterData data, int it, int icStart, int icEnd, CommandRecord commandRec){		if (URLTask==null)			return;		gData = (GeographicData)data;		double latitude = gData.getState(gData.getLatitudeCharacter(),it,0);		double longitude = gData.getState(gData.getLongitudeCharacter(),it,0);		MesquiteModule.showWebPage(URLTask.getURL(latitude, longitude, ""), true);   	}	/*.................................................................................................................*/    	 public Object doCommand(String commandName, String arguments, CommandRecord commandRec, CommandChecker checker) {    	 	if (checker.compare(this.getClass(), "Hires module to specify the URL", "[name of module]", commandName, "chooseURLTask")) {   	 		URLTask= (URLLongLatServer)hireNamedEmployee(commandRec, URLLongLatServer.class, arguments);    	 	}    	 	else    	 		return super.doCommand(commandName, arguments, commandRec, checker);		return null;   	 }	/*.................................................................................................................*/    	 public String getName() {		return " Search Web for Localities";   	 }	/*.................................................................................................................*/  	 public boolean showCitation() {		return false;   	 }   	 	/*.................................................................................................................*/  	 public String getExplanation() {		return "Searches the specified web site for selected localities.";   	 }}