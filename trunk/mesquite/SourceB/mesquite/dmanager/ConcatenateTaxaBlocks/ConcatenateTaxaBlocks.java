/* Mesquite module ~~ Copyright 1997-2001 W. & D. Maddison*/package mesquite.dmanager.ConcatenateTaxaBlocks;/*~~  */import java.applet.*;import java.util.*;import java.awt.*;import mesquite.lib.*;import mesquite.lib.duties.*;import mesquite.lists.lib.*;/** ======================================================================== */public class ConcatenateTaxaBlocks extends TaxaBlocksListUtility { 	/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName){		return true;	}   	/** if returns true, then requests to remain on even after operateData is called.  Default is false*/   	public boolean pleaseLeaveMeOn(){   		return false;   	}   	/** Called to operate on the taxa blocks.  Returns true if altered*/   	public boolean operateOnTaxas(ListableVector taxas, CommandRecord commandRec){			if (taxas.size()<2) {				alert("Can't concatenate taxa when there is only one set of taxa available.  If the other set of taxa is in a separate file, link or include the file before asking to concatenate taxa blocks.");				return false;			}			else {				while (true) {					Listable[] ts = ListDialog.queryListMultiple(containerOfModule(), "Choose blocks of taxa", "Choose 2 or more blocks of taxa to concatenate into one", MesquiteString.helpString, taxas, null);					if (ts==null || ts.length == 0)						return false;					if (ts.length==1)						alert("Must choose at least two sets of taxa to concatenate.");					else {						if (AlertDialog.query(containerOfModule(), "Proceed?", "To concatenate blocks of taxa, you will specify a name for the concatenated set of taxa, the taxa blocks will be concatenated, and then the files will be SAVED and REOPENED.  Are you sure you want to do this?", "Yes", "No")) {							if (!concatenateTaxa(ts))								return false;							String commands = "newThread; saveFiles; getProjectID; Integer.id *It; tell Mesquite; getWindowAutoShow; String.was *It; windowAutoShow off; closeProjectByID *Integer.id; openFile ";							commands +=  StringUtil.tokenize(MesquiteFile.composePath(getProject().getHomeDirectoryName(), getProject().getHomeFileName())) + "; ifNotExists It;  showAbout; endIf; windowAutoShow *String.was; endTell;";							Puppeteer p = new Puppeteer(this);							MesquiteInteger pos = new MesquiteInteger(0);							p.execute(getFileCoordinator(), commands, pos, "", false);						}						return true;					}				}   	 		}	}	/*.................................................................................................................*/   	private boolean concatenateTaxa(Listable[] ts){   		if (ts==null || ts.length<2)   			return false;   		int[] oldSizes = new int[ts.length];   		for (int i = 0; i<ts.length; i++){   			Taxa t = (Taxa)ts[i];   			oldSizes[i]=t.getNumTaxa();   			t.incrementNotifySuppress();   		}   		//query here if really want to do it; say that if do it, currently should save file then reread.		String name = getProject().getTaxas().getUniqueName("Concatenated");   		name = MesquiteString.queryString(containerOfModule(), "Name", "Name of concatenated set of taxa", name);   		if (name==null) {	   		for (int i = 0; i<ts.length; i++){	   			Taxa t = (Taxa)ts[i];	   			t.decrementNotifySuppress();	   		}	   		return false;		}   		Taxa taxaZero =  (Taxa)ts[0];   		for (int i = 1; i<ts.length; i++){   			Taxa taxaI = (Taxa)ts[i];   			for (int prev = 0; prev< i; prev++){   				Taxa taxaPrev = (Taxa)ts[prev];   				   				for (int tI=0; tI<taxaI.getNumTaxa(); tI++){ //for each taxon in i, add to prev if not present   					Taxon found = taxaPrev.getTaxon(taxaI.getName(tI));   					if (found==null) {   						taxaPrev.addTaxa(taxaPrev.getNumTaxa()-1, 1, false);   						taxaPrev.setTaxonName(taxaPrev.getNumTaxa()-1, taxaI.getName(tI));   					}   				}   			}			for (int tI=0; tI<taxaZero.getNumTaxa(); tI++){ //for each taxon in i, add to prev if not present				Taxon found = taxaI.getTaxon(taxaZero.getName(tI));				if (found==null) {					taxaI.addTaxa(taxaI.getNumTaxa()-1, 1, false);					taxaI.setTaxonName(taxaI.getNumTaxa()-1, taxaZero.getName(tI));				}			}   		}	   		for (int i = 0; i<ts.length; i++){   			Taxa t = (Taxa)ts[i];   			t.setName(name);   			if (i>0)   				t.setDuplicate(true);			t.notifyListeners(this,  new Notification(MesquiteListener.PARTS_ADDED, new int[] {oldSizes[i]-1, t.getNumTaxa()-oldSizes[i]}));    			t.decrementNotifySuppress();   		}   		return true;   	}	/*.................................................................................................................*/    	 public String getName() {		return "Concatenate taxa blocks";   	 }	/*.................................................................................................................*/  	 public String getVersion() {		return null;   	 }   	 	/*.................................................................................................................*/  	 public String getExplanation() {		return "Concatenates blocks of taxa into a single block.";   	 }}	