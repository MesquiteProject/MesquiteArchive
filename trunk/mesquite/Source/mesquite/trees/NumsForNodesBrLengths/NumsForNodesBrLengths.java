/* Mesquite source code.  Copyright 1997-2005 W. Maddison and D. Maddison. Version 1.06, August 2005.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.trees.NumsForNodesBrLengths;import java.util.*;import java.awt.*;import mesquite.lib.*;import mesquite.lib.duties.*;/* ======================================================================== */public class NumsForNodesBrLengths extends BranchLengthsAltererMult {	NumbersForNodes numbersTask;	/*.................................................................................................................*/	public boolean startJob(String arguments, Object condition, CommandRecord commandRec, boolean hiredByName) {		numbersTask = (NumbersForNodes)hireEmployee(commandRec, NumbersForNodes.class,  "Source of matrix (for " + getName() + ")");		if (numbersTask == null)			return sorry(commandRec, getName() + " couldn't start because no NumbersForNodes (for " + getName() + ") was obtained");		return true;  	 }  	 	/*.................................................................................................................*/	public Snapshot getSnapshot(MesquiteFile file) { 		Snapshot temp = new Snapshot();		temp.addLine("getNumbersForNodes ", numbersTask); 		return temp;	}	MesquiteInteger pos = new MesquiteInteger();	/*.................................................................................................................*/	public Object doCommand(String commandName, String arguments, CommandRecord commandRec, CommandChecker checker) {		if (checker.compare(this.getClass(), "Returns module supplying numbers for nodes", null, commandName, "getNumbersForNodes")) {			return numbersTask;		}		else			return super.doCommand(commandName, arguments, commandRec, checker);	}	/*.................................................................................................................*/   	 public boolean isSubstantive(){   	 	return true;   	 }	/*.................................................................................................................*/   	 public boolean isPrerelease(){   	 	return true;   	 }   	/*.................................................................................................................*/	/** returns whether this module is requesting to appear as a primary choice */   	public boolean requestPrimaryChoice(){   		return true;     	}	/*.................................................................................................................*/	public  boolean transformTree(AdjustableTree tree, MesquiteString resultString, boolean notify, CommandRecord commandRec){  	 		if (tree instanceof MesquiteTree) {  				int numNodes = tree.getNumNodeSpaces();  	 			NumberArray result = new NumberArray(numNodes); 	 			numbersTask.calculateNumbers(tree, result, null, commandRec); 	 			   				for (int i=0; i<numNodes; i++)    					((MesquiteTree)tree).setBranchLength(i,result.getDouble(i),false);				if (notify && tree instanceof Listened) ((Listened)tree).notifyListeners(this, new Notification(MesquiteListener.BRANCHLENGTHS_CHANGED), commandRec);							return true;			}			return false;	}	/*.................................................................................................................*/    	 public String getName() {		return "Set Branch Lengths to Numbers For Nodes";   	 }	/*.................................................................................................................*/    	 public String getNameForMenuItem() {		return "Set Branch Lengths to Numbers For Nodes";   	 }	/*.................................................................................................................*/ 	/** returns an explanation of what the module does.*/ 	public String getExplanation() { 		return "Assigns a value of branch length for all of a tree's branches based upon the numbers calculated by a Numbers for Nodes." ;   	 }}