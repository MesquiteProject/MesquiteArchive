/* Mesquite source code.  Copyright 2001-2006 D. Maddison and W. Maddison. Version 1.11, June 2006.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.lib;import java.awt.*;/** A utility class with static methods that present the user with a dialog box in which they can type a number.*/public class QueryDialogs  {		/*.................................................................................................................*/	public static boolean queryInteger(Frame parent, String title, String message,  boolean allowCancel, MesquiteInteger value) {		return queryInteger(parent, title, message, "", allowCancel, value);	}	/*.................................................................................................................*/	public static boolean queryInteger(Frame parent, String title, String message, String help, boolean allowCancel, MesquiteInteger value) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		queryDialog.addLargeOrSmallTextLabel(message);		queryDialog.appendToHelpString(help);		IntegerField integerField = queryDialog.addIntegerField("", value.getValue(), 20);		queryDialog.setDefaultTextComponent(integerField.getTextField());		if (allowCancel)			queryDialog.completeAndShowDialog(true);		else			queryDialog.completeAndShowDialog("OK", null, null, "OK");				value.setValue(integerField.getValue());		if (buttonPressed.getValue()!=0) 			value.setValue(MesquiteInteger.unassigned);		queryDialog.dispose();		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryLong(Frame parent, String title, String message, MesquiteLong value) {		return queryLong(parent, title, message, "", value);	}	/*.................................................................................................................*/	public static boolean queryLong(Frame parent, String title, String message, String help, MesquiteLong value) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		queryDialog.addLargeOrSmallTextLabel(message);		queryDialog.appendToHelpString(help);		LongField longField = queryDialog.addLongField("", value.getValue(), 20);		queryDialog.setDefaultTextComponent(longField.getTextField());		queryDialog.completeAndShowDialog(true);		value.setValue(longField.getValue());		queryDialog.dispose();		if (buttonPressed.getValue()!=0) 			value.setValue(MesquiteLong.unassigned);		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryDouble(Frame parent, String title, String message, MesquiteDouble value) {		return queryDouble(parent, title, message, "", value);	}	/*.................................................................................................................*/	public static boolean queryDouble(Frame parent, String title, String message, String help, MesquiteDouble value) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		queryDialog.addLargeOrSmallTextLabel(message);		queryDialog.appendToHelpString(help);		SingleLineTextField textField = queryDialog.addTextField("", value.toString(), 30);		queryDialog.setDefaultTextComponent(textField);		queryDialog.completeAndShowDialog(true);		value.setValue(MesquiteDouble.fromString(textField.getText()));		queryDialog.dispose();		if (buttonPressed.getValue()!=0) 			value.setValue(MesquiteDouble.unassigned);		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryTwoDoubles(Frame parent, String title, String message1, MesquiteDouble value1, String message2, MesquiteDouble value2) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);				queryDialog.addLargeOrSmallTextLabel(message1);		SingleLineTextField textField1 = queryDialog.addTextField("", value1.toString(), 30);		queryDialog.addLargeOrSmallTextLabel(message2);		SingleLineTextField textField2 = queryDialog.addTextField("", value2.toString(), 30);		queryDialog.completeAndShowDialog(true);		value1.setValue(MesquiteDouble.fromString(textField1.getText()));		value2.setValue(MesquiteDouble.fromString(textField2.getText()));				queryDialog.dispose();		if (buttonPressed.getValue()!=0) {			value1.setValue(MesquiteDouble.unassigned);			value2.setValue(MesquiteDouble.unassigned);		}		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryMesquiteNumber(Frame parent, String title, String message, MesquiteNumber value) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		queryDialog.addLargeOrSmallTextLabel(message);		SingleLineTextField textField = queryDialog.addTextField("", value.toString(), 30);		queryDialog.setDefaultTextComponent(textField);		queryDialog.completeAndShowDialog(true);		String s = textField.getText();		if (s!=null && s.length()>0 && s.charAt(s.length()-1) == (char)10){			s = s.substring(0,s.length()-1); 		}		value.setValue(s);		queryDialog.dispose();		if (buttonPressed.getValue()!=0) 			value.setToUnassigned();		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryShortString(Frame parent, String title, String message, MesquiteString value, boolean hasDefault) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		if (!hasDefault)			queryDialog.setDefaultButton(null);		queryDialog.addLargeOrSmallTextLabel(message);		SingleLineTextField textField = queryDialog.addTextField("", value.toString(), 30);		queryDialog.setDefaultTextComponent((TextComponent)textField);		if (hasDefault)			queryDialog.completeAndShowDialog(true);		else			queryDialog.completeAndShowDialog();		String s = textField.getText();		if (s!=null && s.length()>0 && s.charAt(s.length()-1) == (char)10){			s = s.substring(0,s.length()-1); 		}		value.setValue(s);		queryDialog.dispose();		if (buttonPressed.getValue()!=0) 			value.setValue((String)null);		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryShortString(Frame parent, String title, String message, MesquiteString value) {		return queryShortString(parent, title, message, value, true);	}	/*.................................................................................................................*/	public static boolean queryMultiLineString(Frame parent, String title, String message, MesquiteString value, int numRows, boolean hasDefault, boolean useSmallText) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		if (!hasDefault)			queryDialog.setDefaultButton(null);		queryDialog.addLargeOrSmallTextLabel(message);		TextArea textArea = queryDialog.addTextArea(value.getValue(),numRows);		queryDialog.setDefaultTextComponent((TextComponent)textArea);		if (useSmallText){			textArea.setFont(new Font ("SanSerif", Font.PLAIN, 10));		}		if (hasDefault)			queryDialog.completeAndShowDialog(true);		else			queryDialog.completeAndShowDialog();		String resultText = null;		int count = 0;		while (count++<10){			try {				resultText = textArea.getText();				count = 10;		        }		        catch (Exception e){		        }	        }		value.setValue(resultText);		queryDialog.dispose();		if (buttonPressed.getValue()!=0) 			value.setValue((String)null);		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryString(Frame parent, String title, String message, MesquiteString value, int numRows, boolean hasDefault, boolean useSmallText) {		MesquiteInteger buttonPressed = new MesquiteInteger(1);		ExtensibleDialog queryDialog = new ExtensibleDialog(parent, title,buttonPressed);		if (!hasDefault)			queryDialog.setDefaultButton(null);		queryDialog.addLargeOrSmallTextLabel(message);		SingleLineTextArea textArea = queryDialog.addSingleLineTextArea(value.getValue(),numRows);		queryDialog.setDefaultTextComponent((TextComponent)textArea);		if (useSmallText){			textArea.setFont(new Font ("SanSerif", Font.PLAIN, 10));		}		if (hasDefault)			queryDialog.completeAndShowDialog(true);		else			queryDialog.completeAndShowDialog();		value.setValue(textArea.getText());		queryDialog.dispose();		if (buttonPressed.getValue()!=0) 			value.setValue((String)null);		return (buttonPressed.getValue()==0);	}	/*.................................................................................................................*/	public static boolean queryString(Frame parent, String title, String message, MesquiteString value, int numRows) {		return queryString(parent, title, message, value,numRows, true, false);	}	/*.................................................................................................................*/	public static boolean queryString(Frame parent, String title, String message, MesquiteString value) {		return queryString(parent, title, message, value,3, true, false);	}}